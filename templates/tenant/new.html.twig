{% extends 'base.html.twig' %}

{% set pageName = "Nouveau locataire" %}
{% block title %}{{pageName}}{% endblock %}
{% block pageName %}{{pageName}}{% endblock %}

{% block body %}
    <div class="flex items-center justify-center min-h-screen bg-gray-100">
        <div class="w-full max-w-2xl p-6 bg-white rounded-lg shadow-lg">
            <h1 class="text-2xl font-semibold text-center text-gray-800 mb-5">{{ pageName }}</h1>

{% if properties is not empty %}
            <div class="bg-gray-50 p-4 rounded-md mb-6">
                <p class="text-gray-600">Veuillez remplir les informations ci-dessous :</p>
            </div>

    {{ include('tenant/_form.html.twig') }}
{% else %}
    <div class="my-2 flex justify-center bg-amber-500 px-5 my-4 rounded-lg">
        Vous devez ajoutez une propriété avant de pouvoir ajouter un locataire.
    </div>
{% endif %}
            

        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>

document.addEventListener("DOMContentLoaded", () => {

    const nameRegex = /^([A-Z]|[0-9]+)[-a-zA-ZÀ-ú\s]{2,100}$/;
    const descriptionRegex = /^[-a-zA-ZÀ-ú\s]{5,255}$/;
    const emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    const swissPhoneRegex = /^(\b(0041|0)|\B\+41)(\s?\(0\))?(\s)?[1-9]{2}(\s)?[0-9]{3}(\s)?[0-9]{2}(\s)?[0-9]{2}\b$/;

    validateInput('tenant_lastname', nameRegex)
    validateInput('tenant_firstname', nameRegex)
    validateInput('tenant_email', emailRegex, false)
    validateInput('tenant_phoneNumber', swissPhoneRegex, false)
});

document.addEventListener("DOMContentLoaded", function () {
    let startDateInput = document.getElementById("tenant_rentalStartDate");
    let endDateInput = document.getElementById("tenant_rentalEndDate");

    function getFirstDayOfNextMonth() {
        let today = new Date();
        return new Date(today.getFullYear(), today.getMonth() + 1, 2);
    }

    function updateEndDate() {
        if (startDateInput.value) {
            let startDate = new Date(startDateInput.value);
            startDate.setFullYear(startDate.getFullYear() + 1);
            startDate.setDate(startDate.getDate() - 1); // Soustrait un jour
            endDateInput.value = startDate.toISOString().split('T')[0];
        }
    }

    // Définir automatiquement la date de début au premier jour du mois suivant
    let firstDayNextMonth = getFirstDayOfNextMonth();
    startDateInput.value = firstDayNextMonth.toISOString().split('T')[0];

    // Mettre à jour la date de fin automatiquement
    updateEndDate();

    startDateInput.addEventListener("change", updateEndDate);
});

addEventListener("load", (event) => {

    addTenant(document.getElementById('tenant_property').value);
});
</script>
{% endblock %}
