{% extends 'security_base.html.twig' %}

{% block title %}Log in!{% endblock %}

{% block body %}

<main>
    <div class="md:grid md:grid-cols-3 h-screen">

    <!--login-->
<div class="flex flex-col items-center justify-center min-h-screen bg-gray-100">
    <div class="w-full max-w-md p-8 bg-white rounded-lg shadow-lg">
        <div>
            <form method="post">
                {% if error %}
                    <div class="bg-red-600 w-full text-center text-white rounded py-2 mb-4">
                        {{ error.messageKey|trans(error.messageData, 'security') }}
                    </div>
                {% endif %}

                {% set flashs = {1 : 'green', 2 :'yellow', 3 : 'red'} %}
                {% for flash in flashs %}
                    {% for message in app.flashes(flash) %}
                        <div class="bg-{{ flash }}-600 w-full text-center text-white rounded py-2 mb-4">
                            {{ message }}
                        </div>
                    {% endfor %}
                {% endfor %}

                <div class="flex flex-col items-center mb-6">
                  <div class="relative w-[100px] h-[100px] mx-auto mt-2">
                      <img src="{{ asset('media/logo_border.png') }}" alt="Logo" class="w-full h-full object-cover invert" />
                      <h2 class="absolute bottom-0 left-1/2 transform -translate-x-1/2 px-1 text-lg font-bold text-center bottom-[-15px]">
                          {{ app_name }}
                      </h2>
                      <h2 class="absolute right-[-13px] bottom-[-5px] px-1 text-xs font-bold text-center bg-orange-500 rounded">
                          APP
                      </h2>
                  </div>
                    <h2 class="mt-4 text-xl font-bold text-center text-gray-900 bg-gray-100 px-4 py-2 rounded-lg">
                        Se connecter Ã  Tellaris
                    </h2>
                </div>

                <div class="text-center mb-6">
                    <a href="{{ path('app_register') }}" class="text-blue-600 font-thin">Pas encore de compte ? Inscription</a>
                </div>

                <hr class="my-6">

                <div class="mb-4">
                    <label class="block font-thin mb-2" for="email">Email</label>
                    <input type="email" value="{{ last_username }}" name="_email" id="email" class="input-base" autocomplete="email" required autofocus>
                </div>

                <div class="mb-6">
                    <label class="block font-thin mb-2" for="password">Password</label>
                    <input 
                      type="password" 
                      name="_password" 
                      id="password" 
                      class="input-base" 
                      autocomplete="current-password" 
                      required
                      {{ stimulus_controller('symfony/ux-toggle-password/toggle-password', {
                          visibleLabel: 'Afficher',
                          hiddenLabel: 'Masquer',
                          visibleIcon: 'Default',
                          hiddenIcon: 'Default',
                          buttonClasses: ['toggle-password-button'],
                      }) }}
                    >
                </div>

                <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}" />

                    <button class="mt-8 py-2 appearance-none w-full border rounded-md border-gray-300 bg-cyan-400 hover:bg-cyan-500" type="submit">
                        Login !
                    </button>
            </form>
        </div>
    </div>
</div>

        <!--image-->
        <div class="hidden md:block bg-cover bg-center col-span-2" style="background-image: url({{ asset('media/login.jpg') }})"></div>

    </div>
</main>
    
{% endblock %}

{% block javascripts %}
  <script>
window.addEventListener("load", () => {
  const email = document.getElementById("email");
  const password = document.getElementById("password");

  // As per the HTML Specification
  const emailRegExp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;



    const emailIsValid = emailRegExp.test(email.value);
      if (emailIsValid) {
      email.classList.add("focus:border-green-700")
    }

    const passwordIsValid = password.value.length > 2;
      if (passwordIsValid) {
      password.classList.add("focus:border-green-700")
    }


  // email input eventListener
  email.addEventListener("input", () => {
    const emailIsValid = emailRegExp.test(email.value);
    if (emailIsValid) {
      email.classList.add("focus:border-green-700")
    }else{
      email.classList.remove("focus:border-green-700")
    }
  });

  // password input eventListener
  password.addEventListener("input", () => {

    if (password.value.length > 5) {
      password.classList.add("focus:border-green-700")
    }else{
      password.classList.remove("focus:border-green-700")
    }
  });
  });
</script>
{% endblock %}
