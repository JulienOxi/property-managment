{% extends 'base.html.twig' %}

{% set pageName = "Nouveau bail de location" %}
{% block title %}{{pageName}}{% endblock %}
{% block pageName %}{{pageName}}{% endblock %}

{% block body %}
    <div class="flex items-center justify-center min-h-screen bg-gray-100">
        <div class="w-full max-w-3xl p-6 bg-white rounded-lg shadow-lg">
            <h1 class="text-2xl font-semibold text-center text-gray-800 mb-5">{{ pageName }}</h1>

{% set properties = "hello" %}
{% if properties is not empty %}
            <div class="bg-gray-50 p-4 rounded-md mb-6">
                <p class="text-gray-600">Veuillez remplir les informations ci-dessous :</p>
            </div>

    {{ include('lease/_form.html.twig') }}
{% else %}
    <div class="my-2 flex justify-center bg-amber-500 px-5 my-4 rounded-lg">
        Vous devez ajoutez une propriété avant de pouvoir ajouter un locataire.
    </div>
{% endif %}
            

        </div>
    </div>
    
{% endblock %}

{% block javascripts %}

<script>
window.addEventListener("load", () => {

    const date = /^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[0-2])\.\d{4}$/;
    const emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    const priceRegex = /^(10(?:[.,]0{1,2})?|[0-9]{1,4}(?:[.,][0-9]{1,2})?)$/;
    const phoneRegex = /^(\b(0041|0)|\B\+41)(\s?\(0\))?(\s)?[1-9]{2}(\s)?[0-9]{3}(\s)?[0-9]{2}(\s)?[0-9]{2}\b$/;

    const nameRegex = /^([A-Z]|[0-9]+)[-a-zA-ZÀ-ú\s]{2,100}$/;

    document.getElementById("menu_btn_lease").classList.add("menu-btn-active");

    validateInput('lease_property', null)
    validateInput('lease_fromAt', null)
    validateInput('lease_toAt', null)
    validateInput('lease_rentAmount', priceRegex, false)
    validateInput('lease_feeAmount', priceRegex, false)
    validateInput('lease_parkingAmount', priceRegex, false)
    validateInput('lease_variousAmount', priceRegex, false)

// Délégation d'événements pour les champs dynamiques
document.addEventListener('input', function(e) {
    // Vérifie si l'élément qui a déclenché l'événement est un champ à valider
    if (e.target.matches('[id^="lease_tenants"]')) {
        let regex = null;
        const id = e.target.id;
        
        // Assigner le bon regex selon l'ID du champ
        if (id.includes('firstname') || id.includes('lastname')) {
            regex = nameRegex;
        } else if (id.includes('email')) {
            regex = emailRegex;
        } else if (id.includes('phoneNumber')) {
            regex = phoneRegex;
        }
        // Ajouter d'autres conditions pour d'autres types de champs
        
        // Valider le champ
        validateInput(e.target.id, regex, null)
    }
});


    addOneYearToInput(document.getElementById("lease_fromAt"), document.getElementById("lease_toAt"));
})

</script>
{% endblock %}
