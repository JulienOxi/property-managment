{% extends 'base.html.twig' %}

{% set pageName = "Créer une nouvelle transaction financière" %}

{% block title %}{{pageName}}{% endblock %}
{% block pageName %}{{pageName}}{% endblock %}

{% block body %}
    <div class="flex items-center justify-center min-h-screen bg-gray-100">
        <div class="w-full max-w-2xl p-6 bg-white rounded-lg shadow-lg">
            <h1 class="text-xl font-semibold text-center text-gray-800 mb-5 md:text-2xl">{{ pageName }}</h1>

                {% if properties is not empty %}

                    {{ include('financial_entry/_form.html.twig') }}

                {% else %}
                    <div class="my-2 flex justify-center bg-amber-500 px-5 my-4 rounded-lg">
                        Vous devez ajoutez une propriété avant de pouvoir ajouter une transaction financière.
                    </div>
                {% endif %}

        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener("DOMContentLoaded", () => {
    const amountRegex = /^\d+(?:[\.,]\d{0,2})?$/;
    const dateRegex = /^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[0-2])\.(\d{4})$/;
    const descriptionRegex = /^.{2,255}$/;

    validateInput('financial_entry_new_amount', amountRegex, false)
    validateInput('financial_entry_new_paidAt', dateRegex, false)
    validateInput('financial_entry_new_description', descriptionRegex, false)
});
</script>

<script>
//permet de generer l'url pour le tri des catégories et afficher uniquement les catégories en foncitron des "entrées" ou "sorties"
document.addEventListener("DOMContentLoaded", function () {
    const urlParams = new URLSearchParams(window.location.search);
    const typeFields = document.querySelectorAll('select[name="financial_entry_new[type]"]');
    let baseUrl = '{{ path("app_financial_entry_new") }}'; // Twig génère l'URL en tant que string JS

    typeFields.forEach(field => {
        field.addEventListener("change", function () {
            if (urlParams.has('property')) {
                window.location.href = baseUrl + '?property=' + urlParams.get('property') + '&type=' + encodeURIComponent(this.value);
            }else{
                window.location.href = baseUrl + '?type=' + encodeURIComponent(this.value);
            } 
        });
    });


    const propertyFields = document.querySelectorAll('select[name="financial_entry_new[property]"]');

    propertyFields.forEach(field => {
        field.addEventListener("change", function () {
            if (urlParams.has('type')) {
                window.location.href = baseUrl + '?type=' + urlParams.get('type') + '&property=' + encodeURIComponent(this.value);
            }else{
                window.location.href = baseUrl + '?property=' + encodeURIComponent(this.value);
            }        
        });
    })
});
</script>

<script>
window.addEventListener("load", () => {
    document.getElementById("menu_btn_finance").classList.add("menu-btn-active");
})
</script>
{% endblock %}
